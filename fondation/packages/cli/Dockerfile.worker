# Multi-stage build for Fondation CLI with Worker
# This Dockerfile builds both CLI and Worker for complete job processing

# Stage 1: Build with official Bun image
FROM oven/bun:1.2.5 AS builder

WORKDIR /build

# Copy package files for all workspace packages
COPY package.json bun.lock ./
COPY packages/shared/package.json ./packages/shared/
COPY packages/cli/package.json ./packages/cli/
COPY packages/worker/package.json ./packages/worker/

# Install dependencies
RUN bun install

# Copy source code
COPY packages/shared ./packages/shared
COPY packages/cli ./packages/cli
COPY packages/worker ./packages/worker
COPY tsconfig.json ./
COPY biome.json ./

# Build shared package first (dependency)
WORKDIR /build/packages/shared
RUN bun run build

# Build CLI package
WORKDIR /build/packages/cli
RUN bun run build

# Bundle the CLI
RUN bun build dist/cli.js --outfile dist/cli.bundled.mjs --target=node --format=esm --external @anthropic-ai/claude-code

# Copy prompts to dist
RUN cp -r prompts dist/prompts

# Build Worker package
WORKDIR /build/packages/worker
RUN bun run build

# Bundle the Worker
RUN bun build dist/index.js --outfile dist/worker.bundled.mjs --target=node --format=esm

# Stage 2: Runtime with slim Bun image
FROM oven/bun:1.2.5-slim

# Install bash, curl for Claude SDK, and git for repository access
RUN apt-get update && \
    apt-get install -y bash curl git && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy bundled CLI and prompts from builder
COPY --from=builder /build/packages/cli/dist/cli.bundled.mjs ./cli/dist/
COPY --from=builder /build/packages/cli/dist/prompts ./cli/dist/prompts/
COPY --from=builder /build/packages/cli/package.json ./cli/

# Copy bundled Worker from builder
COPY --from=builder /build/packages/worker/dist/worker.bundled.mjs ./worker/dist/

# Install ONLY Claude SDK as external dependency
RUN cd cli && bun add @anthropic-ai/claude-code@latest && \
    # Create symlink for the CLI to find the SDK at the expected location
    mkdir -p /app/node_modules && \
    ln -s /app/cli/node_modules/@anthropic-ai /app/node_modules/@anthropic-ai && \
    # Create the expected entrypoints symlink for Claude SDK
    mkdir -p /app/cli/node_modules/@anthropic-ai/entrypoints && \
    ln -s /app/cli/node_modules/@anthropic-ai/claude-code/cli.js /app/cli/node_modules/@anthropic-ai/entrypoints/cli.js

# Create workspace and output directories
RUN mkdir -p /workspace /output

# Create symlink for prompts path resolution
RUN ln -sf /app/cli/dist/prompts /app/cli/prompts

# Create entrypoint script
RUN echo '#!/bin/bash\n\
if [ "$1" = "worker" ]; then\n\
  exec node /app/worker/dist/worker.bundled.mjs\n\
elif [ "$1" = "cli" ]; then\n\
  shift\n\
  exec node /app/cli/dist/cli.bundled.mjs "$@"\n\
else\n\
  exec node /app/cli/dist/cli.bundled.mjs "$@"\n\
fi' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

# Set environment
ENV NODE_ENV=production \
    SHELL=/bin/bash \
    HOME=/root

# Verify installations
RUN node /app/cli/dist/cli.bundled.mjs --version && \
    node /app/worker/dist/worker.bundled.mjs --help 2>/dev/null || echo "Worker ready"

ENTRYPOINT ["/app/entrypoint.sh"]
CMD ["--help"]